{"version":3,"sources":["components/Markdown.js","components/Picker.js","App.js","index.js"],"names":["raw","dangerouslySetInnerHTML","__html","sanitize","parse","options","getLabel","placeholder","onSelected","Autocomplete","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","fullWidth","openOnFocus","getOptionLabel","renderInput","params","TextField","length","sx","color","borderColor","onChange","_event","value","ListboxProps","maxHeight","repo","Repo","download","recipe","a","fetch","download_url","httpResponse","ok","console","error","text","useState","recipes","setRecipes","markdown","setMarkdown","useEffect","fetchRecipes","ls","handleSelected","AppBar","position","Toolbar","mr","Picker","name","replace","Box","m","Markdown","theme","createTheme","palette","primary","main","deepPurple","components","MuiAutocomplete","styleOverrides","option","backgroundColor","alpha","dark","ReactDOM","render","ThemeProvider","CssBaseline","App","document","querySelector"],"mappings":"+RAIe,kBAAEA,EAAF,EAAEA,IAAF,OACb,qBAAKC,wBAAyB,CAACC,OAAQC,mBAASC,YAAMJ,Q,0BCFzC,kBAAEK,EAAF,EAAEA,QAASC,EAAX,EAAWA,SAAUC,EAArB,EAAqBA,YAAaC,EAAlC,EAAkCA,WAAlC,OACb,cAACC,EAAA,EAAD,CACEC,eAAa,EACbC,YAAU,EACVC,cAAY,EACZC,aAAW,EACXC,WAAS,EACTC,aAAW,EACXC,eAAgBV,EAChBD,QAASA,EACTY,YAAa,SAAAC,GAAM,OACjB,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEX,YAAaF,EAAQe,OAASb,EAAc,aAC5Cc,GAAI,CACF,0BAA2B,CACzBC,MAAO,uBACP,aAAc,CACZC,YAAa,wBAEf,mBAAoB,CAClBA,YAAa,wBAEf,yBAA0B,CACxBA,YAAa,8BAMvBC,SAAU,SAACC,EAAQC,GAAT,OAAmBlB,EAAWkB,IACxCC,aAAc,CAACN,GAAI,CAACO,UAAW,YC3B7BC,EAAO,IAAIC,IAAK,kBAEhBC,EAAQ,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACYC,MAAMF,EAAOG,cADzB,WACTC,EADS,QAEGC,GAFH,uBAGbC,QAAQC,MAAM,mBAAoBP,EAAOG,cAH5B,kBAIN,MAJM,gCAMRC,EAAaI,QANL,2CAAH,sDASC,aACb,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAS,sBAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACR,IAAMC,EAAY,uCAAG,sBAAAd,EAAA,kEACnBU,EADmB,SACFd,EAAKmB,GAAG,eADN,6EAAH,qDAGlBD,MACC,CAAClB,IAEJ,IAAMoB,EAAc,uCAAG,WAAMjB,GAAN,eAAAC,EAAA,yDACN,OAAXD,EADiB,uBAEnBa,EAAY,sBAFO,0CAMFd,EAASC,GANP,UAOR,QADPQ,EANe,+BAQnBK,EAAY,oCARO,0BAYrBA,EAAYL,GAZS,4CAAH,sDAepB,OACE,qCACE,cAACU,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,CAAgB/B,GAAI,CAACgC,GAAI,KACzB,cAACC,EAAD,CACEjD,QAASqC,EACTpC,SAAU,SAAA0B,GAAM,OAAIA,EAAOuB,KAAKC,QAAQ,QAAS,KACjDhD,WAAYyC,EACZ1C,YAAY,yBAIlB,cAACkD,EAAA,EAAD,CAAKpC,GAAI,CAACqC,EAAG,GAAb,SACE,cAACC,EAAD,CAAU3D,IAAK4C,UCpDjBgB,EAAQC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAMC,IAAW,SAKvBL,EAAMM,WAAa,CACjBC,gBAAiB,CACfC,eAAgB,CACdC,OAAQ,CACN,gBAAiB,CACfC,gBACEC,YAAMX,EAAME,QAAQC,QAAQS,KAAM,IAAO,kBAOrDC,IAASC,OACP,eAACC,EAAA,EAAD,CAAef,MAAOA,EAAtB,UACE,cAACgB,EAAA,EAAD,IACA,cAACC,EAAD,OAEFC,SAASC,cAAc,Y","file":"static/js/main.bba54dc9.chunk.js","sourcesContent":["import React from \"react\";\nimport {sanitize} from \"dompurify\";\nimport {parse} from \"marked/lib/marked.esm.js\"; // weird workaround?!\n\nexport default ({raw}) => (\n  <div dangerouslySetInnerHTML={{__html: sanitize(parse(raw))}}></div>\n);\n","import React from \"react\";\nimport {Autocomplete, TextField} from \"@mui/material\";\n\nexport default ({options, getLabel, placeholder, onSelected}) => (\n  <Autocomplete\n    autoHighlight\n    autoSelect\n    blurOnSelect\n    clearOnBlur\n    fullWidth\n    openOnFocus\n    getOptionLabel={getLabel}\n    options={options}\n    renderInput={params => (\n      <TextField\n        {...params}\n        placeholder={options.length ? placeholder : \"Loading...\"}\n        sx={{\n          \"&.MuiOutlinedInput-root\": {\n            color: \"primary.contrastText\",\n            \"& fieldset\": {\n              borderColor: \"primary.contrastText\",\n            },\n            \"&:hover fieldset\": {\n              borderColor: \"primary.contrastText\",\n            },\n            \"&.Mui-focused fieldset\": {\n              borderColor: \"primary.contrastText\",\n            },\n          },\n        }}\n      />\n    )}\n    onChange={(_event, value) => onSelected(value)}\n    ListboxProps={{sx: {maxHeight: \"75vh\"}}}\n  />\n);\n","import React, {useEffect, useState} from \"react\";\nimport {AppBar, Box, Toolbar} from \"@mui/material\";\nimport RestaurantIcon from \"@mui/icons-material/Restaurant\";\nimport {Repo} from \"@deek80/gh-reader\";\nimport Markdown from \"./components/Markdown\";\nimport Picker from \"./components/Picker\";\n\nconst repo = new Repo(\"deek80/recipes\");\n\nconst download = async recipe => {\n  const httpResponse = await fetch(recipe.download_url);\n  if (!httpResponse.ok) {\n    console.error(\"Failed to fetch:\", recipe.download_url);\n    return null;\n  }\n  return httpResponse.text();\n};\n\nexport default () => {\n  const [recipes, setRecipes] = useState([]);\n  const [markdown, setMarkdown] = useState(\"No recipe selected\");\n\n  useEffect(() => {\n    const fetchRecipes = async () => {\n      setRecipes(await repo.ls(\"public/list\"));\n    };\n    fetchRecipes();\n  }, [repo]);\n\n  const handleSelected = async recipe => {\n    if (recipe === null) {\n      setMarkdown(\"No recipe selected\");\n      return;\n    }\n\n    const text = await download(recipe);\n    if (text === null) {\n      setMarkdown(\"Error: failed to download recipe\");\n      return;\n    }\n\n    setMarkdown(text);\n  };\n\n  return (\n    <>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <RestaurantIcon sx={{mr: 2}} />\n          <Picker\n            options={recipes}\n            getLabel={recipe => recipe.name.replace(/\\.md$/, \"\")}\n            onSelected={handleSelected}\n            placeholder=\"Select a Recipe\"\n          />\n        </Toolbar>\n      </AppBar>\n      <Box sx={{m: 4}}>\n        <Markdown raw={markdown} />\n      </Box>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {alpha, createTheme, CssBaseline, ThemeProvider} from \"@mui/material\";\nimport {deepPurple} from \"@mui/material/colors\";\nimport App from \"./App\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: deepPurple[100],\n    },\n  },\n});\n\ntheme.components = {\n  MuiAutocomplete: {\n    styleOverrides: {\n      option: {\n        \"&.Mui-focused\": {\n          backgroundColor:\n            alpha(theme.palette.primary.dark, 0.5) + \"!important\",\n        },\n      },\n    },\n  },\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}