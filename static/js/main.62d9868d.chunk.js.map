{"version":3,"sources":["components/Markdown.js","components/Picker.js","App.js","index.js"],"names":["raw","dangerouslySetInnerHTML","__html","sanitize","parse","repo","onSelected","useState","isLoading","setLoading","recipes","setRecipes","useEffect","fetchRecipes","a","ls","Autocomplete","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","fullWidth","openOnFocus","getOptionLabel","option","name","replace","options","renderInput","params","TextField","placeholder","sx","color","borderColor","onChange","_event","value","ListboxProps","maxHeight","Repo","markdown","setMarkdown","download","file","fetch","download_url","httpResponse","ok","console","error","text","handleSelected","recipe","AppBar","position","Toolbar","mr","Picker","Box","m","Markdown","theme","createTheme","palette","primary","main","deepPurple","components","MuiAutocomplete","styleOverrides","backgroundColor","alpha","dark","ReactDOM","render","ThemeProvider","CssBaseline","App","document","querySelector"],"mappings":"mPAIe,kBAAEA,EAAF,EAAEA,IAAF,OACb,qBAAKC,wBAAyB,CAACC,OAAQC,mBAASC,YAAMJ,Q,0BCFzC,cAAyB,IAAvBK,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,WACrB,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAUA,OARAC,qBAAU,WACR,IAAMC,EAAY,uCAAG,sBAAAC,EAAA,kEACnBH,EADmB,SACFN,EAAKU,GAAG,eADN,6EAAH,qDAGlBF,IACAJ,GAAW,KACV,CAACJ,IAGF,cAACW,EAAA,EAAD,CACEC,eAAa,EACbC,YAAU,EACVC,cAAY,EACZC,aAAW,EACXC,WAAS,EACTC,aAAW,EACXC,eAAgB,SAAAC,GAAM,OAAIA,EAAOC,KAAKC,QAAQ,QAAS,KACvDC,QAASjB,EACTkB,YAAa,SAAAC,GAAM,OACjB,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEE,YAAavB,EAAY,aAAe,kBACxCwB,GAAI,CACF,0BAA2B,CACzBC,MAAO,uBACP,aAAc,CACZC,YAAa,wBAEf,mBAAoB,CAClBA,YAAa,wBAEf,yBAA0B,CACxBA,YAAa,8BAMvBC,SAAU,SAACC,EAAQC,GAAT,OAAmB/B,EAAW+B,IACxCC,aAAc,CAACN,GAAI,CAACO,UAAW,Y,4CCvC/BlC,EAAO,IAAImC,IAAK,kBAEP,aACb,MAAgCjC,mBAAS,sBAAzC,mBAAOkC,EAAP,KAAiBC,EAAjB,KAEMC,EAAQ,uCAAG,WAAMC,GAAN,eAAA9B,EAAA,sEACY+B,MAAMD,EAAKE,cADvB,WACTC,EADS,QAEGC,GAFH,uBAGbC,QAAQC,MAAM,mBAAoBN,EAAKE,cAH1B,kBAIN,MAJM,gCAMRC,EAAaI,QANL,2CAAH,sDASRC,EAAc,uCAAG,WAAMC,GAAN,eAAAvC,EAAA,yDACN,OAAXuC,EADiB,uBAEnBX,EAAY,sBAFO,0CAMFC,EAASU,GANP,UAOR,QADPF,EANe,+BAQnBT,EAAY,oCARO,0BAYrBA,EAAYS,GAZS,4CAAH,sDAepB,OACE,qCACE,cAACG,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,CAAgBxB,GAAI,CAACyB,GAAI,KACzB,cAACC,EAAD,CAAQrD,KAAMA,EAAMC,WAAY8C,SAGpC,cAACO,EAAA,EAAD,CAAK3B,GAAI,CAAC4B,EAAG,GAAb,SACE,cAACC,EAAD,CAAU7D,IAAKyC,UCvCjBqB,EAAQC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAMC,IAAW,SAKvBL,EAAMM,WAAa,CACjBC,gBAAiB,CACfC,eAAgB,CACd9C,OAAQ,CACN,gBAAiB,CACf+C,gBACEC,YAAMV,EAAME,QAAQC,QAAQQ,KAAM,IAAO,kBAOrDC,IAASC,OACP,eAACC,EAAA,EAAD,CAAed,MAAOA,EAAtB,UACE,cAACe,EAAA,EAAD,IACA,cAACC,EAAD,OAEFC,SAASC,cAAc,Y","file":"static/js/main.62d9868d.chunk.js","sourcesContent":["import React from \"react\";\nimport {sanitize} from \"dompurify\";\nimport {parse} from \"marked/lib/marked.esm.js\"; // weird workaround?!\n\nexport default ({raw}) => (\n  <div dangerouslySetInnerHTML={{__html: sanitize(parse(raw))}}></div>\n);\n","import React, {useEffect, useState} from \"react\";\nimport {Autocomplete, TextField} from \"@mui/material\";\n\nexport default ({repo, onSelected}) => {\n  const [isLoading, setLoading] = useState(true);\n  const [recipes, setRecipes] = useState([]);\n\n  useEffect(() => {\n    const fetchRecipes = async () => {\n      setRecipes(await repo.ls(\"public/list\"));\n    };\n    fetchRecipes();\n    setLoading(false);\n  }, [repo]);\n\n  return (\n    <Autocomplete\n      autoHighlight\n      autoSelect\n      blurOnSelect\n      clearOnBlur\n      fullWidth\n      openOnFocus\n      getOptionLabel={option => option.name.replace(/\\.md$/, \"\")}\n      options={recipes}\n      renderInput={params => (\n        <TextField\n          {...params}\n          placeholder={isLoading ? \"Loading...\" : \"Select a Recipe\"}\n          sx={{\n            \"&.MuiOutlinedInput-root\": {\n              color: \"primary.contrastText\",\n              \"& fieldset\": {\n                borderColor: \"primary.contrastText\",\n              },\n              \"&:hover fieldset\": {\n                borderColor: \"primary.contrastText\",\n              },\n              \"&.Mui-focused fieldset\": {\n                borderColor: \"primary.contrastText\",\n              },\n            },\n          }}\n        />\n      )}\n      onChange={(_event, value) => onSelected(value)}\n      ListboxProps={{sx: {maxHeight: \"75vh\"}}}\n    />\n  );\n};\n","import React, {useState} from \"react\";\nimport {Repo} from \"@deek80/gh-reader\";\nimport Markdown from \"./components/Markdown\";\nimport Picker from \"./components/Picker\";\nimport {AppBar, Box, Toolbar} from \"@mui/material\";\nimport RestaurantIcon from \"@mui/icons-material/Restaurant\";\n\nconst repo = new Repo(\"deek80/recipes\");\n\nexport default () => {\n  const [markdown, setMarkdown] = useState(\"No recipe selected\");\n\n  const download = async file => {\n    const httpResponse = await fetch(file.download_url);\n    if (!httpResponse.ok) {\n      console.error(\"Failed to fetch:\", file.download_url);\n      return null;\n    }\n    return httpResponse.text();\n  };\n\n  const handleSelected = async recipe => {\n    if (recipe === null) {\n      setMarkdown(\"No recipe selected\");\n      return;\n    }\n\n    const text = await download(recipe);\n    if (text === null) {\n      setMarkdown(\"Error: failed to download recipe\");\n      return;\n    }\n\n    setMarkdown(text);\n  };\n\n  return (\n    <>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <RestaurantIcon sx={{mr: 2}} />\n          <Picker repo={repo} onSelected={handleSelected} />\n        </Toolbar>\n      </AppBar>\n      <Box sx={{m: 4}}>\n        <Markdown raw={markdown} />\n      </Box>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {alpha, createTheme, CssBaseline, ThemeProvider} from \"@mui/material\";\nimport {deepPurple} from \"@mui/material/colors\";\nimport App from \"./App\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: deepPurple[100],\n    },\n  },\n});\n\ntheme.components = {\n  MuiAutocomplete: {\n    styleOverrides: {\n      option: {\n        \"&.Mui-focused\": {\n          backgroundColor:\n            alpha(theme.palette.primary.dark, 0.5) + \"!important\",\n        },\n      },\n    },\n  },\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}