{"version":3,"sources":["components/Picker.js","components/Markdown.js","App.js","index.js"],"names":["options","getLabel","placeholder","onSelected","Autocomplete","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","fullWidth","openOnFocus","getOptionLabel","renderInput","params","TextField","length","sx","color","borderColor","onChange","_","value","reason","ListboxProps","maxHeight","raw","dangerouslySetInnerHTML","__html","sanitize","parse","repo","Repo","useState","recipes","setRecipes","editUrl","setEditUrl","markdown","setMarkdown","useEffect","fetchRecipes","a","ls","handleSelected","recipe","edit_url","download","text","AppBar","position","Toolbar","mr","Picker","name","replace","IconButton","disabled","onClick","window","open","ml","p","Box","m","Markdown","theme","createTheme","palette","primary","main","deepPurple","components","MuiAutocomplete","styleOverrides","option","backgroundColor","alpha","dark","ReactDOM","render","ThemeProvider","CssBaseline","App","document","querySelector"],"mappings":"mUAGe,kBAAEA,EAAF,EAAEA,QAASC,EAAX,EAAWA,SAAUC,EAArB,EAAqBA,YAAaC,EAAlC,EAAkCA,WAAlC,OACb,cAACC,EAAA,EAAD,CACEC,eAAa,EACbC,YAAU,EACVC,cAAY,EACZC,aAAW,EACXC,WAAS,EACTC,aAAW,EACXC,eAAgBV,EAChBD,QAASA,EACTY,YAAa,SAAAC,GAAM,OACjB,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEX,YAAaF,EAAQe,OAASb,EAAc,aAC5Cc,GAAI,CACF,0BAA2B,CACzBC,MAAO,uBACP,aAAc,CACZC,YAAa,wBAEf,mBAAoB,CAClBA,YAAa,wBAEf,yBAA0B,CACxBA,YAAa,8BAMvBC,SAAU,SAACC,EAAGC,EAAOC,GAAX,MAAiC,SAAXA,GAAqBnB,EAAWkB,IAChEE,aAAc,CAACP,GAAI,CAACQ,UAAW,Y,gBC9BpB,kBAAEC,EAAF,EAAEA,IAAF,OACb,qBAAKC,wBAAyB,CAACC,OAAQC,mBAASC,YAAMJ,QCElDK,EAAO,IAAIC,IAAK,kBAEP,aACb,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,MAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgCJ,mBAAS,sBAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACR,IAAMC,EAAY,uCAAG,sBAAAC,EAAA,kEACnBP,EADmB,SACFJ,EAAKY,GAAG,eADN,6EAAH,qDAGlBF,MACC,CAACV,IAEJ,IAAMa,EAAc,uCAAG,WAAMC,GAAN,eAAAH,EAAA,yDACN,OAAXG,EADiB,uBAEnBR,EAAW,MACXE,EAAY,sBAHO,iCAOrBF,EAAWQ,EAAOC,UAPG,SAQFD,EAAOE,WARL,UASR,QADPC,EARe,gCAUnBT,EAAY,oCAVO,2BAcrBA,EAAYS,GAdS,4CAAH,sDAqBpB,OACE,qCACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,CAAgBlC,GAAI,CAACmC,GAAI,KACzB,cAACC,EAAD,CACEpD,QAASiC,EACThC,SAAU,SAAA2C,GAAM,OAAIA,EAAOS,KAAKC,QAAQ,QAAS,KACjDnD,WAAYwC,EACZzC,YAAY,oBAEd,cAACqD,EAAA,EAAD,CACEtC,MAAM,UACNuC,UAAWrB,EACXsB,QAlBS,WACjBC,OAAOC,KAAKxB,IAkBJnB,GAAI,CAAC4C,GAAI,EAAGC,EAAG,GAJjB,SAME,cAAC,IAAD,WAIN,cAACC,EAAA,EAAD,CAAK9C,GAAI,CAAC+C,EAAG,GAAb,SACE,cAACC,EAAD,CAAUvC,IAAKY,UC1DjB4B,EAAQC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAMC,IAAW,SAKvBL,EAAMM,WAAa,CACjBC,gBAAiB,CACfC,eAAgB,CACdC,OAAQ,CACN,gBAAiB,CACfC,gBACEC,YAAMX,EAAME,QAAQC,QAAQS,KAAM,IAAO,kBAOrDC,IAASC,OACP,eAACC,EAAA,EAAD,CAAef,MAAOA,EAAtB,UACE,cAACgB,EAAA,EAAD,IACA,cAACC,EAAD,OAEFC,SAASC,cAAc,Y","file":"static/js/main.b5df7591.chunk.js","sourcesContent":["import React from \"react\";\nimport {Autocomplete, TextField} from \"@mui/material\";\n\nexport default ({options, getLabel, placeholder, onSelected}) => (\n  <Autocomplete\n    autoHighlight\n    autoSelect\n    blurOnSelect\n    clearOnBlur\n    fullWidth\n    openOnFocus\n    getOptionLabel={getLabel}\n    options={options}\n    renderInput={params => (\n      <TextField\n        {...params}\n        placeholder={options.length ? placeholder : \"Loading...\"}\n        sx={{\n          \"&.MuiOutlinedInput-root\": {\n            color: \"primary.contrastText\",\n            \"& fieldset\": {\n              borderColor: \"primary.contrastText\",\n            },\n            \"&:hover fieldset\": {\n              borderColor: \"primary.contrastText\",\n            },\n            \"&.Mui-focused fieldset\": {\n              borderColor: \"primary.contrastText\",\n            },\n          },\n        }}\n      />\n    )}\n    onChange={(_, value, reason) => reason === \"blur\" && onSelected(value)}\n    ListboxProps={{sx: {maxHeight: \"75vh\"}}}\n  />\n);\n","import React from \"react\";\nimport {sanitize} from \"dompurify\";\nimport {parse} from \"marked/lib/marked.esm.js\"; // weird workaround?!\n\nexport default ({raw}) => (\n  <div dangerouslySetInnerHTML={{__html: sanitize(parse(raw))}}></div>\n);\n","import React, {useEffect, useState} from \"react\";\nimport {AppBar, Box, IconButton, Toolbar} from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport RestaurantIcon from \"@mui/icons-material/Restaurant\";\nimport {Repo} from \"@deek80/gh-reader\";\nimport {Markdown, Picker} from \"./components\";\n\nconst repo = new Repo(\"deek80/recipes\");\n\nexport default () => {\n  const [recipes, setRecipes] = useState([]);\n  const [editUrl, setEditUrl] = useState(null);\n  const [markdown, setMarkdown] = useState(\"No recipe selected\");\n\n  useEffect(() => {\n    const fetchRecipes = async () => {\n      setRecipes(await repo.ls(\"public/list\"));\n    };\n    fetchRecipes();\n  }, [repo]);\n\n  const handleSelected = async recipe => {\n    if (recipe === null) {\n      setEditUrl(null);\n      setMarkdown(\"No recipe selected\");\n      return;\n    }\n\n    setEditUrl(recipe.edit_url);\n    const text = await recipe.download();\n    if (text === null) {\n      setMarkdown(\"Error: failed to download recipe\");\n      return;\n    }\n\n    setMarkdown(text);\n  };\n\n  const handleEdit = () => {\n    window.open(editUrl);\n  };\n\n  return (\n    <>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <RestaurantIcon sx={{mr: 2}} />\n          <Picker\n            options={recipes}\n            getLabel={recipe => recipe.name.replace(/\\.md$/, \"\")}\n            onSelected={handleSelected}\n            placeholder=\"Select a Recipe\"\n          />\n          <IconButton\n            color=\"inherit\"\n            disabled={!editUrl}\n            onClick={handleEdit}\n            sx={{ml: 2, p: 0}}\n          >\n            <EditIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Box sx={{m: 4}}>\n        <Markdown raw={markdown} />\n      </Box>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {alpha, createTheme, CssBaseline, ThemeProvider} from \"@mui/material\";\nimport {deepPurple} from \"@mui/material/colors\";\nimport App from \"./App\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: deepPurple[100],\n    },\n  },\n});\n\ntheme.components = {\n  MuiAutocomplete: {\n    styleOverrides: {\n      option: {\n        \"&.Mui-focused\": {\n          backgroundColor:\n            alpha(theme.palette.primary.dark, 0.5) + \"!important\",\n        },\n      },\n    },\n  },\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}